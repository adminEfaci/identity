version: '3.9'

services:
  api:
    build: .
    container_name: identity-api
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgresql+asyncpg://identity:password@db:5432/identity_db"
      REDIS_URL: "redis://redis:6379/0"
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
      SECRET_KEY: "${SECRET_KEY:-your-secret-key-here}"
      ALGORITHM: "${ALGORITHM:-HS256}"
      ACCESS_TOKEN_EXPIRE_MINUTES: "${ACCESS_TOKEN_EXPIRE_MINUTES:-30}"
      PYTHONPATH: "/app"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./alembic.ini:/app/alembic.ini
    networks:
      - identity-network

  db:
    image: postgres:16-alpine
    container_name: identity-db
    environment:
      POSTGRES_USER: identity
      POSTGRES_PASSWORD: password
      POSTGRES_DB: identity_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U identity -d identity_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - identity-network

  redis:
    image: redis:7-alpine
    container_name: identity-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - identity-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: identity-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - identity-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  identity-network:
    driver: bridge